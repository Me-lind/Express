// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "products",
    columns: [
      { name: "name", type: "text" },
      { name: "description", type: "text" },
      { name: "price", type: "float" },
      { name: "category", type: "text" },
      { name: "stock", type: "int" },
    ],
  },
  { name: "example", columns: [] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Products = InferredTypes["products"];
export type ProductsRecord = Products & XataRecord;

export type Example = InferredTypes["example"];
export type ExampleRecord = Example & XataRecord;

export type DatabaseSchema = {
  products: ProductsRecord;
  example: ExampleRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Melinda-s-workspace-o3ejv4.eu-central-1.xata.sh/db/xata-CRUD",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
